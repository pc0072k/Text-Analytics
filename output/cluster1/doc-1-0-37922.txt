Filename: /home/dev/scikit_learn_data/20news_home/20news-bydate-train/comp.graphics/37922
Truth category: 0 (comp.graphics)
Assigned cluster: 1 (graphic imag file thank program format gif use bit help)

Raw data:
============ START RAW ==========================
From: rowlands@pocomoco.NoSubdomain.NoDomain (Jon Rowlands)
Subject: Re: More gray levels out of the screen
Nntp-Posting-Host: pocomoco.hc.ti.com
Reply-To: rowlands@hc.ti.com (Jon Rowlands)
Organization: Texas Instruments, SPDC, DSP Technology Branch, Dallas
Lines: 51

In article <1pp991$t63@cc.tut.fi>, jk87377@lehtori.cc.tut.fi (Kouhia Juhana)
writes:
>In article <1993Apr5.040819.14943@kpc.com> hollasch@kpc.com (Steve
>Hollasch) writes:
>>
>>    I think you're proposal would work to get an extra one, maybe two extra
>>bits of color resolution.  However, if you had a display that chould do only
>>zero or full intensity for each primary, I don't think you'd get great
>>equivalent 24-bit photographs.
>
>I have not suggested to do so; I wrote about problems, and the problem
>were clearly visible with 7 bit b&w images; not to mention 24 bit images.

[ description of experiment deleted ]

>If the 1 bit images are viewed quickly and in sync with screen,
>then 100 intensities could be better than we have -- I dunno.

[ more deleted ]

>In any case, getting black color with slow machines is problem.
>I could try it on our 8 bit screens but I don't know how to
>render pixels with X in constant time. I recall our double buffer
>has other image color and one b&w -- that doesn't help either.
>Maybe I should dump photos to screen with low level code; how?

A few years ago a friend and I took some 256 grey-level photos from
a 1 bit Mac Plus screen using this method. Displaying all 256 levels
synchronized to the 60Hz display took about 10 seconds. After
experimenting with different aperture settings and screen
brightnesses we found a range that worked well, giving respectable
contrast. The quality of the images was pretty good. There were no
visible contrast bands.

To minimize the exposure time the display program built 255
different 1 bit frames. The first contained a dot only for pixels
that had value 255, the second only for pixels that had value 254,
etc. These frames were stored using a sparse data structure that was
very fast to 'or' onto the screen in sequence. Creating these
frames sometimes took 5-10 minutes on that old Mac, but the camera
shutter was closed during that time anyway. And yes, we wrote
directly to the screen memory. Mea culpa.

Our biggest problem was that small images were displayed in the
top left corner of the screen instead of the center. It took
an extra week to have the film developed and printed, because the
processors took the trouble to manually move the all images into
the center of the print. Who'd have guessed?

regards,
Jon Rowlands

========== END RAW ============================

Preprocessed:
============ START PREPROCESSED =================
 gray level screen      lehtori tut kouhia juhana
kpc com steve   think you'r propos work get extra
one mayb two extra bit color resolut howev display
chould zero full intens primari don't think you'd
get great equival bit photograph  suggest wrote
problem problem clear visibl bit imag mention bit
imag  descript experi delet  bit imag view quick
sync screen intens could better dunno  delet  case
get black color slow machin problem could tri bit
screen don't know render pixel constant time recal
doubl buffer imag color one doesn't help either
mayb dump photo screen low level code  year ago
friend took grey level photo bit mac plus screen
use method display level synchron 60hz display
took second experi differ apertur set screen
bright found rang work well give respect contrast
qualiti imag pretti good visibl contrast band
minim exposur time display program built differ
bit frame first contain dot pixel valu second
pixel valu etc frame store use spars data structur
fast or onto screen sequenc creat frame sometim
took minut old mac camera shutter close time
anyway yes wrote direct screen memori mea culpa
biggest problem small imag display top left corner
screen instead center took extra week film develop
print processor took troubl manual move imag
center print who'd guess  regard jon rowland
========== END PREPROCESSED =====================


Feature vector (sorted, non-zero values only):
Term, Index, Value:
screen, 7719, 0.449778655021
bit, 1122, 0.289907334499
imag, 4512, 0.25210895359
took, 8987, 0.237086781279
display, 2734, 0.231472220373
level, 5229, 0.176315603495
pixel, 6651, 0.162479756888
frame, 3643, 0.156011579209
extra, 3325, 0.150274684398
problem, 6887, 0.13520948114
color, 1907, 0.129549080194
contrast, 2101, 0.129058008638
intens, 4701, 0.119756395404
photo, 6603, 0.115550131999
visibl, 9541, 0.110096761421
print, 6871, 0.102919460052
mac, 5410, 0.0957650972625
delet, 2502, 0.0921023345865
wrote, 9871, 0.0911610805734
experi, 3295, 0.0899669661064
valu, 9414, 0.0878925078724
center, 1606, 0.0867376223335
tut, 9163, 0.0837801437324
shutter, 7928, 0.0837801437324
culpa, 2288, 0.0837801437324
kpc, 5070, 0.081382630177
time, 8936, 0.0765857939314
juhana, 4925, 0.0763327864079
mayb, 5564, 0.0752179369711
kouhia, 5068, 0.0750672942038
second, 7753, 0.0747838104694
dunno, 2921, 0.0739352728525
apertur, 561, 0.0739352728525
synchron, 8651, 0.0729112349777
grey, 4040, 0.0688854290834
exposur, 3313, 0.0670390243002
differ, 2633, 0.0661666783862
jon, 4887, 0.0654638776532
dot, 2826, 0.0654638776532
corner, 2149, 0.062495738035
dump, 2916, 0.0621314907637
gray, 4011, 0.0611074528889
biggest, 1084, 0.0611074528889
work, 9833, 0.0608785124184
photograph, 6604, 0.0607867047275
buffer, 1371, 0.0607867047275
minim, 5739, 0.0604752549357
camera, 1473, 0.0604752549357
processor, 6891, 0.0593125794538
band, 891, 0.0593125794538
sequenc, 7804, 0.0587752542184
film, 3479, 0.0587752542184
manual, 5492, 0.0585163437268
equival, 3162, 0.0582635258158
zero, 9985, 0.0577750659994
primari, 6863, 0.0573078504123
bright, 1311, 0.056643044648
constant, 2067, 0.0548647135803
store, 8417, 0.0545065382308
render, 7277, 0.0541599189625
slow, 8044, 0.0531824940263
recal, 7166, 0.0527252222303
resolut, 7316, 0.0522866198837
troubl, 9117, 0.0520038597365
qualiti, 7017, 0.0517283506544
plus, 6700, 0.051593200879
descript, 2557, 0.0505691630042
doubl, 2828, 0.0500915614661
minut, 5747, 0.0496342896701
think, 8871, 0.0492151687622
structur, 8460, 0.0489829226387
machin, 5416, 0.048878099705
don, 2811, 0.0487409793289
respect, 7321, 0.0486714728469
memori, 5628, 0.0486714728469
rang, 7094, 0.0485696307054
method, 5666, 0.048368797466
friend, 3692, 0.0480744156134
steve, 8390, 0.0478825486312
use, 9363, 0.0474583186267
fast, 3397, 0.0474173562558
sometim, 8128, 0.0472367761146
contain, 2079, 0.0472367761146
built, 1381, 0.0470591809063
com, 1917, 0.0469714721296
black, 1133, 0.0469714721296
instead, 4682, 0.0461316490589
quick, 7036, 0.0458132771588
propos, 6933, 0.0451296657909
low, 5368, 0.0442809933299
regard, 7224, 0.0440123727016
mention, 5632, 0.0430004002582
left, 5193, 0.0427616289768
code, 1871, 0.042702756142
view, 9510, 0.0419653932498
small, 8054, 0.0418563134756
ago, 336, 0.0418563134756
guess, 4079, 0.0416414210027
creat, 2217, 0.0415355653142
clear, 1803, 0.0412241155224
direct, 2667, 0.0411730737852
suggest, 8525, 0.0409712976113
close, 1830, 0.0407242921243
old, 6216, 0.0406270582889
develop, 2588, 0.0400156222078
data, 2385, 0.0397894187901
week, 9691, 0.0395678796944
pretti, 6851, 0.0393938796895
yes, 9951, 0.0391380517587
set, 7815, 0.0384842065205
case, 1540, 0.0373561505745
howev, 4406, 0.0370396026733
great, 4016, 0.0357356694068
doesn, 2793, 0.0348520814467
program, 6905, 0.0333504420339
better, 1060, 0.0321424718474
help, 4249, 0.0315650290779
tri, 9087, 0.0311164367116
good, 3948, 0.0276189026193
year, 9943, 0.0270023740766
know, 5052, 0.0231429631023
