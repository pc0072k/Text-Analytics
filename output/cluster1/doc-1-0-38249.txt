Filename: /home/dev/scikit_learn_data/20news_home/20news-bydate-train/comp.graphics/38249
Truth category: 0 (comp.graphics)
Assigned cluster: 1 (graphic imag file thank program format gif use bit help)

Raw data:
============ START RAW ==========================
From: zyeh@caspian.usc.edu (zhenghao yeh)
Subject: Re: Point within a polygon
Organization: University of Southern California, Los Angeles, CA
Lines: 28
Distribution: world
NNTP-Posting-Host: caspian.usc.edu
Keywords: point, polygon


In article <1993Apr14.102007.20664@uk03.bull.co.uk>, scrowe@hemel.bull.co.uk (Simon Crowe) writes:
|> I am looking for an algorithm to determine if a given point is bound by a 
|> polygon. Does anyone have any such code or a reference to book containing
|> information on the subject ?
|> 
|> 		Regards
|> 
|> 			Simon

Basically, there are two algorithms determining whether a point is inside,
outside or on the polygon. The first one is Ray (or half line) method. In
this method, you can draw any ray, if the number of the intersection point
of the ray and the polygon is even, then it is outside. If the number is odd,
then it is inside. Of cause, you have to deal with the special cases which
may make you headache.

The second method is PI algorithm. Draw the lines between the point and
all the vertices on the polygon. Calculate and sum the angles of the
successive lines. If the result is 2*PI, then it is inside. If PI, then
it is on the polygon. Otherwise it is outside.

My experience tells the second method is relible.

Hope this helps.

Yeh
USC

========== END RAW ============================

Preprocessed:
============ START PREPROCESSED =================
 point within polygon         look algorithm
determin given point bound polygon anyon code
refer book contain inform  regard  simon  basic
two algorithm determin whether point insid outsid
polygon first one ray half line method method draw
ray number intersect point ray polygon even outsid
number odd insid caus deal special case make
headach  second method algorithm draw line point
vertic polygon calcul sum angl success line result
insid polygon otherwis outsid  experi tell second
method relibl  hope help  yeh usc
========== END PREPROCESSED =====================


Feature vector (sorted, non-zero values only):
Term, Index, Value:
polygon, 6728, 0.538283960851
method, 5666, 0.315312307047
outsid, 6332, 0.24968596644
point, 6710, 0.247126833508
insid, 4671, 0.24606171895
algorithm, 407, 0.228386579001
ray, 7118, 0.219579041872
line, 5285, 0.174121522879
draw, 2861, 0.155456834437
determin, 2582, 0.152536768635
headach, 4216, 0.132631707935
second, 7753, 0.121877413975
yeh, 9945, 0.117302030605
number, 6156, 0.113876535087
usc, 9361, 0.112264645309
simon, 7964, 0.112264645309
vertic, 9482, 0.101257549905
sum, 8532, 0.100683391877
bound, 1250, 0.0985583328098
intersect, 4722, 0.0971183230683
angl, 511, 0.0953658365884
odd, 6198, 0.0891203687962
calcul, 1451, 0.0843032411342
half, 4124, 0.0793213558883
otherwis, 6313, 0.0785067787382
special, 8198, 0.0780356224839
success, 8513, 0.0777284172183
contain, 2079, 0.0769831876876
experi, 3295, 0.0733109285511
basic, 937, 0.0720555848895
regard, 7224, 0.0717282809488
caus, 1569, 0.0708842500475
deal, 2418, 0.0707815503337
code, 1871, 0.0695939596487
result, 7332, 0.0679511696967
refer, 7213, 0.064556574353
given, 3887, 0.0628485692382
book, 1218, 0.0627188630822
hope, 4372, 0.0625901106565
case, 1540, 0.0608804365476
inform, 4637, 0.0575527253609
tell, 8767, 0.057219186686
help, 4249, 0.051442472534
anyon, 554, 0.0470532090027
make, 5459, 0.0439180295297
look, 5341, 0.043698599954
