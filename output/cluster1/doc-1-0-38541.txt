Filename: /home/dev/scikit_learn_data/20news_home/20news-bydate-train/comp.graphics/38541
Truth category: 0 (comp.graphics)
Assigned cluster: 1 (graphic imag file thank program format gif use bit help)

Raw data:
============ START RAW ==========================
From: idr@rigel.cs.pdx.edu (Ian D Romanick)
Subject: Re: Fast polygon routine needed
Keywords: polygon, needed
Article-I.D.: pdxgate.7306
Organization: Portland State University, Computer Science Dept.
Lines: 23

In article <C5nF8t.Gsq@news.cso.uiuc.edu> osprey@ux4.cso.uiuc.edu (Lucas Adamski) writes:
>In article <1993Apr17.192947.11230@sophia.smith.edu> orourke@sophia.smith.edu (Joseph O'Rourke) writes:
>>	A fast polygon routine to do WHAT?
>To draw polygons of course.  Its a VGA mode 13h (320x200) game, done in C and
>ASM.  I need a faster way to draw concave polygons that the method I have right
>now, which is very slow.

What kind of polygons?  Shaded?  Texturemapped?  Hm?  More comes into play with
fast routines than just "polygons".  It would be nice to know exaclty what
system (VGA is a start, but what processor?) and a few of the specifics of the
implementation.  You need to give  more info if you want to get any answers! :P

                                  - Ian Romanick
                                    Dancing Fool of Epsilon

[]--------------------------------------------------------------------[]
 | Were the contained thoughts 'opinions',     EPN.NTSC.quality = Best|
 | PSU would probably not agree with them.                            |
 |                                                                    |
 | "Look, I don't know anything about                                 |
 | douche, but I do know Anti-Freeze                                  |
 | when I see it!" - The Dead Milkmen                                 |
[]--------------------------------------------------------------------[]

========== END RAW ============================

Preprocessed:
============ START PREPROCESSED =================
 fast polygon routin need  articl pdxgate
fast polygon routin draw polygon cours vga mode
13h 320x200 game done asm need faster way draw
concav polygon method right slow  kind polygon
shade texturemap come play fast routin polygon
nice know exaclti system vga start processor
specif implement need give info want get answer
ian romanick danc fool epsilon   contain thought
opinion epn ntsc qualiti best psu probabl agre
look don't know anyth douch know anti freez see
dead milkmen
========== END PREPROCESSED =====================


Feature vector (sorted, non-zero values only):
Term, Index, Value:
polygon, 6728, 0.586748247288
routin, 7499, 0.280993113078
fast, 3397, 0.252705441241
vga, 9492, 0.187862646779
draw, 2861, 0.169453358764
need, 5993, 0.153955335917
texturemap, 8826, 0.148832269173
exaclti, 3252, 0.144573176661
psu, 6966, 0.141093244694
epsilon, 3153, 0.141093244694
ian, 4468, 0.135602319443
13h, 20, 0.133354220216
asm, 692, 0.131343226931
320x200, 88, 0.129524062224
freez, 3682, 0.126335537183
concav, 1997, 0.12492105441
know, 5052, 0.123337806326
ntsc, 6147, 0.120124270486
danc, 2352, 0.120124270486
fool, 3585, 0.109142419983
shade, 7835, 0.105862351443
processor, 6891, 0.105366562974
anti, 542, 0.0965184507639
slow, 8044, 0.0944766971453
faster, 3399, 0.093664371026
implement, 4544, 0.0921366132446
qualiti, 7017, 0.0918934662256
mode, 5806, 0.0875861138071
method, 5666, 0.0859253465475
dead, 2415, 0.0850615438106
contain, 2079, 0.0839143532625
nice, 6047, 0.077266299018
specif, 8203, 0.0757558221638
info, 4636, 0.0751433594714
agre, 337, 0.0738801597851
opinion, 6266, 0.0714967296518
answer, 535, 0.0704472975907
kind, 5021, 0.06808607828
thought, 8887, 0.0666171395987
anyth, 555, 0.0654335667657
cours, 2190, 0.0653131450233
best, 1052, 0.0638131095167
play, 6681, 0.0629453790541
probabl, 6885, 0.062422420783
articl, 665, 0.0615157540486
start, 8334, 0.0604165867851
right, 7399, 0.0580604343136
game, 3761, 0.0578562956526
come, 1923, 0.0553482643957
want, 9634, 0.0519933749729
way, 9666, 0.0499286916866
look, 5341, 0.0476329944727
don, 2811, 0.0432932568031
