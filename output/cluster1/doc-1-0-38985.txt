Filename: /home/dev/scikit_learn_data/20news_home/20news-bydate-test/comp.graphics/38985
Truth category: 0 (comp.graphics)
Assigned cluster: 1 (graphic imag file thank program format gif use bit help)

Raw data:
============ START RAW ==========================
X-To: mek@hydrox.enet.dec.com comp-graphics
Subject: Re: TIFF complexity
Organization: I.E.C.C.
X-Cc: 
From: johnl@iecc.cambridge.ma.us (John R. Levine)
Lines: 34

In article <9304271755.AA23355@enet-gw.pa.dec.com> you write:
>Anyone who thinks that TIFF is too complex hasn't dealt with
>CGM, ASN.1, CDA, DCA, SGML, or any one of a number of other
>very successful file format.  People seem perfectly capable
>dealing with these others.

Well, yeah, but unlike TIFF they all do substantially more than encode
rectangular bitmaps.  And the others are hardly trouble free.  I hear that
it is quite common for CGM implementations not to interoperate.

The annoying thing about TIFF is that is that along with the 50 useful
options, there are 100 stupid options.  The most egregious example is that
rather than picking a byte order and bit order and using it consistently
in all TIFF files, byte and bit order are options and all TIFF readers on
all machines, no matter what their natural byte order, have to be prepared
to do byte swapping.  There are four slightly different FAX formats --
again, any one of them would have been adequate.  RGB images can be stored
by pixel or by component, complexity without function, etc, etc.  I also
note that the TIFF doc says that Aldus' experiments show that LZW reliably
compresses as well or better than any of the FAX formats, suggesting that
none of the FAX formats are really useful.

What's worse, a lot of the formats aren't even implemented very well,
e.g., LZW limits code words to 12 bits, while 14 or 16 bits would have
provided substantially better compression.  And the LZW method compresses
bytes rather than pixels.

But the absolute worst thing about TIFF is that any vendor can register
proprietary TIFF codes and formats without even publicly documenting them.
This means that there is NO WAY to write a TIFF reader that can reliably
read all incoming TIFF files.  Some standard.

Regards,
John Levine, johnl@iecc.cambridge.ma.us, {spdcc|ima|world}!iecc!johnl

========== END RAW ============================

Preprocessed:
============ START PREPROCESSED =================
 tiff complex       anyon think tiff complex
hasn't dealt cgm asn cda dca sgml one number
success file format peopl seem perfect capabl deal
other  well yeah unlik tiff substanti encod
rectangular bitmap other hard troubl free hear
quit common cgm implement interoper  annoy thing
tiff along use option stupid option egregi exampl
rather pick byte order bit order use consist tiff
file byte bit order option tiff reader machin
matter natur byte order prepar byte swap four
slight differ fax format one adequ rgb imag store
pixel compon complex without function etc etc also
note tiff doc say aldus experi show lzw reliabl
compress well better fax format suggest none fax
format realli use  what wors lot format aren't
even implement well lzw limit code word bit bit
provid substanti better compress lzw method
compress byte rather pixel  absolut worst thing
tiff vendor regist proprietari tiff code format
without even public document mean way write tiff
reader reliabl read incom tiff file standard
regard
========== END PREPROCESSED =====================


Feature vector (sorted, non-zero values only):
Term, Index, Value:
tiff, 8926, 0.588393324359
byte, 1438, 0.298801581871
format, 3612, 0.258732569911
lzw, 5409, 0.238945484194
compress, 1986, 0.167329239634
complex, 1976, 0.158177461456
option, 6276, 0.156453105019
order, 6281, 0.152353073035
cgm, 1633, 0.146235159734
bit, 1122, 0.145363898244
fax, 3413, 0.135772159552
substanti, 8503, 0.121917472365
reliabl, 7256, 0.117363899741
reader, 7137, 0.11540351748
file, 3477, 0.111853081876
pixel, 6651, 0.10862639212
implement, 4544, 0.104024010086
code, 1871, 0.0856472170223
dca, 2407, 0.0840172485419
sgml, 7833, 0.0816129498228
swap, 8621, 0.0765488145737
aldus, 393, 0.0765488145737
dealt, 2420, 0.0752797409209
rectangular, 7190, 0.0721800607632
use, 9363, 0.0713889444529
proprietari, 6935, 0.0672287503424
incom, 4581, 0.0672287503424
encod, 3086, 0.0666760818863
adequ, 265, 0.0651701927084
better, 1060, 0.0644668754587
regist, 7229, 0.0634425531421
doc, 2783, 0.0634425531421
annoy, 525, 0.0634425531421
vendor, 9458, 0.0626726061974
bitmap, 1126, 0.0603428729844
thing, 8869, 0.0588708021559
rgb, 7374, 0.0586819498707
prepar, 6831, 0.0584284164638
compon, 1980, 0.055582269713
hasn, 4195, 0.0552041722292
store, 8417, 0.0546607962899
yeah, 9942, 0.05381195812
wors, 9846, 0.05381195812
unlik, 9290, 0.0534903022145
slight, 8034, 0.0533330049297
worst, 9849, 0.0528744390162
stupid, 8476, 0.0527258204855
troubl, 9117, 0.0521510350063
function, 3722, 0.050470140297
absolut, 193, 0.050233324772
document, 2788, 0.0495525927886
consist, 2061, 0.049121548404
machin, 5416, 0.0490164288126
pick, 6619, 0.0485056852057
method, 5666, 0.0485056852057
capabl, 1498, 0.0483079792432
success, 8513, 0.0478290260528
perfect, 6538, 0.0471044053218
limit, 5278, 0.0471044053218
common, 1948, 0.0470171605322
aren, 623, 0.0470171605322
hear, 4223, 0.0465080261662
natur, 5966, 0.0456328486402
experi, 3295, 0.0451107900702
standard, 8313, 0.0441369313952
regard, 7224, 0.0441369313952
free, 3668, 0.0438741214723
deal, 2418, 0.0435543747849
matter, 5553, 0.0418127421353
public, 6973, 0.041392213731
suggest, 8525, 0.0410872498082
hard, 4167, 0.0407906804626
provid, 6949, 0.0398572249729
quit, 7043, 0.0394621825433
exampl, 3258, 0.0390811131459
note, 6118, 0.0388750901836
word, 9829, 0.0385931200417
write, 9865, 0.0371444278448
imag, 4512, 0.0361174918573
number, 6156, 0.0350361165091
lot, 5356, 0.0336188158399
mean, 5595, 0.0332978969413
differ, 2633, 0.0331769678083
read, 7135, 0.0327988703245
realli, 7150, 0.0319722207504
peopl, 6530, 0.0292333700468
anyon, 554, 0.0289534926839
way, 9666, 0.0281852270487
say, 7653, 0.027355436558
think, 8871, 0.0246772259017
