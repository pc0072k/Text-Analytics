Filename: /home/dev/scikit_learn_data/20news_home/20news-bydate-train/comp.graphics/38462
Truth category: 0 (comp.graphics)
Assigned cluster: 0 (space orbit like use launch know moon think time shuttl)

Raw data:
============ START RAW ==========================
From: sloan@cis.uab.edu (Kenneth Sloan)
Subject: Re: Removing Distortion From Bitmapped Drawings?
Organization: CIS, University of Alabama at Birmingham
Lines: 135

In article <1993Apr19.141034.24731@sctc.com> boebert@sctc.com (Earl Boebert) writes:
>Let's say you have a scanned image of a line drawing; in this case a
>boat, but it could be anything.  On the drawing you have a set of
>reference points whose true x,y positions are known.  
>
>Now you digitize the drawing manually (in this case, using Yaron
>Danon's excellent Digitize program).  That is, you use a program which
>converts cursor positions to x,y and saves those values when you click
>the mouse.
>
>Upon digitizing you notice that the reference point values that come
>out of the digitizing process differ in small but significant ways
>from the known true values.  This is understandable because the
>scanned drawing is a reproduction of the original and there are
>successive sources of distortion such as differential expansion and
>contraction of paper, errors introduced in the printing process,
>scanner errors and what have you.
>
>The errors are not uniform over the entire drawing, so "global"
>adjustments such as stretching/contracting uniformly over x or y, or
>rotating the whole drawing, are not satisfactory.
>
>So the question is: does any kind soul know of an algorithm for
>removing such distortion?  In particular, if I have three sets of
>points 
>
>Reference(x,y) (the known true values)
>
>DistortedReference(x,y) (the same points, with known errors)
>
>DistortedData(x,y) (other points, with unknown errors)
>
>what function of Reference and Distorted could I apply to
>DistortedData to remove the errors.
>
>I suspect the problem could be solved by treating the distorted
>reference points as resulting from the projection of a "bumpy" 3d
>surface, solving for the surface and then "flattening" it to remove
>the errors in the other data points.

It helps to have some idea of the source of the distortion - or at least
a reasonable model of the class of distortion.  Below is a very short
description of the process which we use; if you have further questions,
feel free to poke me via e-mail.

================================================================
*ASSUME: locally smooth distortion

0) Compute the Delaunay Triangulation of your (x,y) points.  This
   defines the set of neighbors for each point.  If your data are
   not naturally convex, you may have very long edges on the convex hull.
   Consider deleting these edges.

1) Now, there are two goals:

    a) move the DistortedData(x,y) to the Reference(x,y)
    b) keep the Length(e) (as measured from the current (x,y)'s)
       as close as possible to the DigitizedLength(e) (as measured 
       using the digitized (x,y)'s).

2) For every point, compute a displacement based on a) and b).  For
   example:

    a) For (x,y) points for which you know the Reference(x,y), you
       can move alpha0*(Reference(x,y) - Current(x,y)).   This will
       slowly move the DistortedReference(x,y) towards the
       Reference(x,y). 
    b) For all other points, examine the current length of each edge.
       For each edge, compute a displacement which would make that edge
       the correct length (where "correct" is the DigitizedLength). 
       Take the vector sum of these edge displacements, and move the
       point alpha1*SumOfEdgeDisplacements.  This will keep the
       triangulated mesh consistent with your Digitized mesh.

3) Iterate 2) until you are happy (for example, no point moves very much).

alpha0 and alpha1 need to be determined by experimentation.   Consider
how much you believe the Reference(x,y) - i.e., do you absolutely insist
on the final points exactly matching the References, or do you want to
balance some error in matching the Reference against changes in length
of the edges.

WARNING: there are a couple of geometric invariants which must be
observed (essentially, you can't allow the convex hull to change, and
you can't allow triangles to "fold over" neighboring triangles.  Both of
these can be handled either by special case checks on the motion of
individual points, or by periodically re-triangulating the points (using 
the current positions - but still calculating DigitizedLength from the
original positions.  When we first did this, the triangulation time was
prohibitive, so we only did it once.  If I were motivated to try and
change code that has been working in production mode for 5 years, I
*might* go back and re-triangulate on every iteration.  If you have more
compute power than you know what to do with, you might consider having
every point interact with every other point....but first read up on
linear solutions to the n-body problem.

There are lots of papers in the last 10 years of SIGGRAPH proceedings on
springs, constraints,  and energy calculations which are relevant.  The
above method is described, in more or less detail in:

@inproceedings{Sloan86,
author="Sloan, Jr., Kenneth R. and David Meyers and Christine A.~Curcio",
title="Reconstruction and Display of the Retina",
booktitle="Proceedings: Graphics Interface '86 Vision Interface '86",
address="Vancouver, Canada",
pages="385--389",
month="May",
year=1986  }

@techreport{Curcio87b,
author="Christine A.~Curcio and Kenneth R.~Sloan and David Meyers",
title="Computer Methods for Sampling, Reconstruction, Display, and
Analysis of Retinal Whole Mounts",
number="TR 87-12-03",
institution="Department of Computer Science, University of Washington",
address="Seattle, WA",
month="December",
year=1987  }

@article{Curcio89,
author="Christine A.~Curcio and Kenneth R.~Sloan and David Meyers",
title="Computer Methods for Sampling, Reconstruction, Display, and
Analysis of Retinal Whole Mounts",
journal="Vision Research",
volume=29,
number=5,
pages="529--540",
year=1989  }
 

-- 
Kenneth Sloan                   Computer and Information Sciences
sloan@cis.uab.edu               University of Alabama at Birmingham
(205) 934-2213                  115A Campbell Hall, UAB Station 
(205) 934-5473 FAX              Birmingham, AL 35294-1170

========== END RAW ============================

Preprocessed:
============ START PREPROCESSED =================
 remov distort bitmap draw     let say scan imag
line draw case boat could anyth draw set refer
point whose true posit known  digit draw manual
case use yaron danon excel digit program use
program convert cursor posit save valu click mous
upon digit notic refer point valu come digit
process differ small signific way known true valu
understand scan draw reproduct origin success
sourc distort differenti expans contract paper
error introduc print process scanner error  error
uniform entir draw global adjust stretch contract
uniform rotat whole draw satisfactori  question
kind soul know algorithm remov distort particular
three set point  refer known true valu
distortedrefer point known error  distorteddata
point unknown error  function refer distort could
appli distorteddata remov error  suspect problem
could solv treat distort refer point result
project bumpi surfac solv surfac flatten remov
error data point  help idea sourc distort least
reason model class distort short descript process
use question feel free poke via mail   assum local
smooth distort  comput delaunay triangul point
defin set neighbor point data natur convex long
edg convex hull consid delet edg  two goal  move
distorteddata refer keep length measur current
close possibl digitizedlength measur use digit
everi point comput displac base exampl  point know
refer move alpha0 refer current slowli move
distortedrefer toward refer point examin current
length edg edg comput displac make edg correct
length correct digitizedlength take vector sum edg
displac move point alpha1 sumofedgedisplac keep
triangul mesh consist digit mesh  iter happi
exampl point move much  alpha0 alpha1 need
determin experiment consid much believ refer
absolut insist final point exact match refer want
balanc error match refer chang length edg  warn
coupl geometr invari must observ essenti can't
allow convex hull chang can't allow triangl fold
neighbor triangl handl either special case check
motion individu point period triangul point use
current posit still calcul digitizedlength origin
posit first triangul time prohibit motiv tri chang
code work product mode year might back triangul
everi iter comput power know might consid everi
point interact everi point first read linear solut
bodi problem  lot paper last year siggraph proceed
spring constraint energi calcul relev method
describ less detail  inproceed sloan86 author
sloan kenneth david meyer christin curcio titl
reconstruct display retina booktitl proceed
graphic interfac vision interfac address vancouv
canada page month year  techreport curcio87b
author christin curcio kenneth sloan david meyer
titl comput method sampl reconstruct display
analysi retin whole mount number institut depart
comput scienc univers washington address seattl
month decemb year  articl curcio89 author christin
curcio kenneth sloan david meyer titl comput
method sampl reconstruct display analysi retin
whole mount journal vision research volum number
page year    kenneth sloan comput inform scienc
115a campbel hall uab station fax birmingham
========== END PREPROCESSED =====================


Feature vector (sorted, non-zero values only):
Term, Index, Value:
point, 6710, 0.31637439995
distort, 2748, 0.299712383227
refer, 7213, 0.260987409205
error, 3180, 0.212894888445
edg, 2993, 0.196771248407
triangul, 9091, 0.185634306261
draw, 2861, 0.183305585118
sloan, 8040, 0.174431005431
digit, 2642, 0.17040932478
comput, 1993, 0.163615715621
kenneth, 4985, 0.162377236272
distorteddata, 2749, 0.143090213265
christin, 1733, 0.143090213265
displac, 2733, 0.128095175316
reconstruct, 7183, 0.125732006006
meyer, 5672, 0.125732006006
length, 5212, 0.116799817798
remov, 7272, 0.112726736775
convex, 2116, 0.104872781376
valu, 9414, 0.0965151136033
distortedrefer, 2750, 0.0953934755099
known, 5054, 0.0943056277913
posit, 6761, 0.0926512774859
current, 2299, 0.0854970999975
hull, 4430, 0.085396783544
titl, 8953, 0.0852046623901
iter, 4799, 0.0838213373376
everi, 3235, 0.0808197703304
method, 5666, 0.0796709542478
neighbor, 6000, 0.0764048107191
display, 2734, 0.0762541706435
mesh, 5648, 0.0756433645431
year, 9943, 0.0741285367959
triangl, 9090, 0.0736158200832
author, 796, 0.0726048253998
process, 6890, 0.0715383894912
david, 2397, 0.0714351968887
uniform, 9273, 0.0674653917486
mount, 5886, 0.0664081187532
match, 5541, 0.0657524878228
use, 9363, 0.0651427113152
proceed, 6889, 0.0639794101814
chang, 1650, 0.0635864966454
set, 7815, 0.0633894911098
true, 9121, 0.0631301827169
solv, 8119, 0.0629299792075
consid, 2059, 0.0620686399304
scan, 7660, 0.0617372147895
sampl, 7601, 0.0617372147895
case, 1540, 0.0615314070065
contract, 2095, 0.0615124780746
interfac, 4709, 0.061291942293
vision, 9542, 0.0600488651301
calcul, 1451, 0.05680310826
page, 6382, 0.0562203566877
analysi, 490, 0.0559394310161
measur, 5601, 0.0532237221113
paper, 6409, 0.0525800177129
surfac, 8587, 0.051579560971
month, 5847, 0.0486251354656
inproceed, 4661, 0.0476967377549
booktitl, 1221, 0.0476967377549
address, 264, 0.0458440077561
correct, 2156, 0.0454381286879
allow, 432, 0.0452123166123
techreport, 8744, 0.0446832954652
birmingham, 1114, 0.0446832954652
115a, 13, 0.0446832954652
scienc, 7692, 0.0440929009233
data, 2385, 0.0436929195412
uab, 9181, 0.0436077513577
poke, 6714, 0.0436077513577
sourc, 8153, 0.0435463546651
exampl, 3258, 0.0427940156457
delaunay, 2498, 0.042698391772
origin, 6293, 0.0419587765083
invari, 4739, 0.0412158476493
flatten, 3527, 0.0412158476493
fold, 3574, 0.0405943090679
satisfactori, 7634, 0.0400320590297
prohibit, 6908, 0.0400320590297
vancouv, 9418, 0.0395187649604
cursor, 2302, 0.0395187649604
click, 1815, 0.0390465801892
boat, 1188, 0.0390465801892
number, 6156, 0.0383647239642
reproduct, 7298, 0.0382024053596
know, 5052, 0.0381200701915
constraint, 2072, 0.0371268612521
campbel, 1479, 0.0371268612521
problem, 6887, 0.0371185176882
slowli, 8046, 0.0368079100416
program, 6905, 0.0366222534723
question, 7032, 0.0357132425202
differenti, 2634, 0.0356808445551
mous, 5889, 0.0354297785632
linear, 5286, 0.0354297785632
introduc, 4732, 0.0354297785632
decemb, 2438, 0.0354297785632
balanc, 872, 0.0351889630698
siggraph, 7941, 0.034957593792
geometr, 3843, 0.034957593792
scanner, 7663, 0.0347349575438
expans, 3289, 0.0347349575438
vector, 9444, 0.0341134189623
smooth, 8069, 0.0341134189623
sum, 8532, 0.0339199865381
motiv, 5881, 0.0339199865381
examin, 3257, 0.0335511689241
journal, 4898, 0.0333750615062
treat, 9076, 0.0332040593766
bitmap, 1126, 0.0330378748549
unknown, 9287, 0.0327189236443
global, 3904, 0.0327189236443
experiment, 3297, 0.0325656900836
soul, 8149, 0.0324163362734
manual, 5492, 0.0321285152692
seattl, 7749, 0.0319897050907
stretch, 8443, 0.031721515254
relev, 7254, 0.031721515254
goal, 3924, 0.0315918581579
motion, 5880, 0.0314649896037
warn, 9643, 0.0309831577978
canada, 1481, 0.0306459711465
adjust, 269, 0.0305377266343
insist, 4673, 0.0304314325803
interact, 4704, 0.030327019936
essenti, 3196, 0.0300244325651
volum, 9577, 0.0298310001408
washington, 9651, 0.0297366115608
spring, 8266, 0.0293734716763
solut, 8118, 0.0291150729794
energi, 3102, 0.0287080729642
hall, 4128, 0.0286299372471
suspect, 8603, 0.0285528229412
print, 6871, 0.0282540674382
excel, 3261, 0.0282540674382
class, 1789, 0.0282540674382
happi, 4161, 0.027765099838
descript, 2557, 0.027765099838
depart, 2535, 0.0276984419491
function, 3722, 0.0276325288567
absolut, 193, 0.0275028717606
rotat, 7490, 0.0273760032065
notic, 6120, 0.0272518057687
handl, 4149, 0.0272518057687
institut, 4683, 0.0271301692862
mode, 5806, 0.0270702788185
consist, 2061, 0.0268941714006
special, 8198, 0.0262900088564
period, 6546, 0.0262900088564
success, 8513, 0.0261865121597
appli, 584, 0.0261354368589
defin, 2482, 0.0258864901989
individu, 4604, 0.0257897804855
determin, 2582, 0.0256946306744
entir, 3129, 0.0256476251636
algorithm, 407, 0.0256476251636
bodi, 1194, 0.0255547230798
signific, 7951, 0.0254180568812
describ, 2556, 0.0254180568812
delet, 2502, 0.025284485279
local, 5322, 0.0251109680523
natur, 5966, 0.0249840994981
station, 8346, 0.0249010113584
fax, 3413, 0.0247785330407
model, 5807, 0.0247382655779
product, 6896, 0.0246982711169
particular, 6442, 0.0246982711169
observ, 6179, 0.0245409508498
coupl, 2187, 0.0245409508498
check, 1682, 0.0240568365288
free, 3668, 0.0240211919466
save, 7646, 0.0237435331505
convert, 2115, 0.0237097269813
code, 1871, 0.023446033456
exact, 3253, 0.0234138853634
short, 7904, 0.0233184790726
feel, 3429, 0.0231936244566
final, 3482, 0.0231628193715
small, 8054, 0.0229812924213
result, 7332, 0.0228925815707
assum, 710, 0.0228925815707
research, 7307, 0.0226906346003
close, 1830, 0.0223597538399
project, 6909, 0.0218958254176
power, 6783, 0.0218958254176
understand, 9246, 0.0211516387511
kind, 5021, 0.021043394239
mail, 5447, 0.0202798535625
anyth, 555, 0.0202235813355
idea, 4482, 0.0201678408226
imag, 4512, 0.0197744177073
univers, 9282, 0.0196039098725
line, 5285, 0.019553703949
graphic, 3997, 0.0194218736496
inform, 4637, 0.0193893713062
possibl, 6765, 0.0193409511132
reason, 7156, 0.0190279248795
articl, 665, 0.0190127012313
let, 5225, 0.0186300779467
long, 5336, 0.0185874845458
base, 923, 0.0184615190395
lot, 5356, 0.0184063862981
believ, 1009, 0.0182173810113
differ, 2633, 0.0181644733885
read, 7135, 0.0179574640644
help, 4249, 0.0173308421906
come, 1923, 0.0171065124845
tri, 9087, 0.0170845416569
work, 9833, 0.016712734351
want, 9634, 0.0160696153312
need, 5993, 0.0158610145213
way, 9666, 0.0154314827574
say, 7653, 0.014977170375
make, 5459, 0.0147958758903
time, 8936, 0.0140165276514
