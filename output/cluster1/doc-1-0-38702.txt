Filename: /home/dev/scikit_learn_data/20news_home/20news-bydate-train/comp.graphics/38702
Truth category: 0 (comp.graphics)
Assigned cluster: 1 (graphic imag file thank program format gif use bit help)

Raw data:
============ START RAW ==========================
From: beck@irzr17.inf.tu-dresden.de (Andre Beck)
Subject: Re: Fonts in POV??
Organization: Dept. of Computer Science, TU Dresden, Germany.
Lines: 57
Distribution: world
Reply-To: Andre_Beck@IRS.Inf.TU-Dresden.DE
NNTP-Posting-Host: irzr17.inf.tu-dresden.de
Keywords: fonts, raytrace


In article <1qg9fc$et9@wampyr.cc.uow.edu.au>, g9134255@wampyr.cc.uow.edu.au (Coronado Emmanuel Abad) writes:
|> 
|> 
|> 	I have seen several ray-traced scenes (from MTV or was it 
|> RayShade??) with stroked fonts appearing as objects in the image.
|> The fonts/chars had color, depth and even textures associated with
|> them.  Now I was wondering, is it possible to do the same in POV??
|> 

Hi Noel,

I've made some attempts to write a converter that reads Adobe Type 1 fonts,
triangulates them, bevelizes them and extrudes them to result in a generic
3d object which could be used with PoV f.i.

The problem I'm currently stuck on is that theres no algorithm which
triangulates any arbitrary polygonal shape. Delaunay seems to be limited
to convex hulls. Constrained delaunay may be okay, but I have no code
example of how to do it.

Another way to do the bartman may be

- TGA2POV
- A selfmade variation of this, using heightfields.

  Create a b/w picture (BIG) of the text you need, f.i. using a PostScript
  previewer. Then, use this as a heightfield. If it is white on black,
  the heightfield is exactly the images white parts (it's still open
  on the backside). To close it, mirror it and compound it with the original.

Example:

object {
   union {
      height_field { gif "abp2.gif" }
      height_field { gif "abp2.gif" scale <1 -1 1>}
   }
   texture {
      Glass
   }
   translate <-0.5 0 -0.5>      //center
   rotate <-90 0 0>             // rotate upwards
   scale  <10 5 100>            // scale bigger and thicker
   translate <0 2 0>            // final placement
}


abp2.gif is a GIF of arbitrary size containing "ABP" black on white in
Times-Roman 256 points.

--
+-o-+--------------------------------------------------------------+-o-+
| o |                \\\-  Brain Inside -///                       | o |
| o |                    ^^^^^^^^^^^^^^^                           | o |
| o | Andre' Beck (ABPSoft) mehl: Andre_Beck@IRS.Inf.TU-Dresden.de | o |
+-o-+--------------------------------------------------------------+-o-+

========== END RAW ============================

Preprocessed:
============ START PREPROCESSED =================
 font pov            seen sever ray trace scene
mtv rayshad stroke font appear object imag font
char color depth even textur associ wonder possibl
pov   noel  i'v made attempt write convert read
adob type font triangul bevel extrud result
generic object could use pov  problem i'm current
stuck there algorithm triangul arbitrari polygon
shape delaunay seem limit convex hull constrain
delaunay okay code exampl  anoth way bartman
tga2pov selfmad variat use heightfield  creat
pictur big text need use postscript preview use
heightfield white black heightfield exact imag
white part it still open backsid close mirror
compound origin  exampl  object union height field
gif abp2 gif height field gif abp2 gif scale
textur glass  translat center rotat rotat upward
scale scale bigger thicker translat final
placement    abp2 gif gif arbitrari size contain
abp black white time roman point    brain insid
========== END PREPROCESSED =====================


Feature vector (sorted, non-zero values only):
Term, Index, Value:
gif, 3869, 0.335759438959
font, 3582, 0.330872858855
heightfield, 4239, 0.321565852853
pov, 6778, 0.213862762666
delaunay, 2498, 0.191911724112
scale, 7659, 0.18542115939
white, 9737, 0.170465056006
triangul, 9091, 0.166869984046
height, 4238, 0.156119359829
arbitrari, 604, 0.156119359829
textur, 8825, 0.151614605505
object, 6173, 0.146466229297
translat, 9057, 0.133653848706
rotat, 7490, 0.123043884245
use, 9363, 0.117115886787
black, 1133, 0.115914464973
upward, 9346, 0.103374772982
thicker, 8864, 0.103374772982
extrud, 3335, 0.103374772982
bevel, 1061, 0.103374772982
field, 3466, 0.0997844724446
backsid, 857, 0.0979994608744
exampl, 3258, 0.0961707570641
mtv, 5909, 0.0959558620562
hull, 4430, 0.0959558620562
char, 1659, 0.0959558620562
noel, 6091, 0.0941856162391
imag, 4512, 0.0888778812978
rayshad, 7120, 0.0877491658798
constrain, 2071, 0.0867667053128
glass, 3893, 0.085852056407
generic, 3820, 0.0841927497382
union, 9275, 0.0834349920228
stroke, 8454, 0.0834349920228
preview, 6854, 0.0827182147137
variat, 9430, 0.0796211473876
stuck, 8466, 0.0790799640477
convex, 2116, 0.0785600091364
scene, 7671, 0.0753993582311
postscript, 6772, 0.0753993582311
compound, 1983, 0.0753993582311
bigger, 1083, 0.0750035929949
adob, 277, 0.0746193008454
roman, 7468, 0.0731846970283
depth, 2545, 0.0718902891072
mirror, 5755, 0.0701586376431
shape, 7853, 0.0686272658718
trace, 9028, 0.068388391826
polygon, 6728, 0.0679231809053
brain, 1266, 0.0674737429202
okay, 6215, 0.0660108420788
associ, 706, 0.0623963568524
insid, 4671, 0.0620984308121
size, 8000, 0.0615219421227
text, 8822, 0.0593181340936
contain, 2079, 0.0582845861768
attempt, 763, 0.0582845861768
limit, 5278, 0.0579572324865
algorithm, 407, 0.0576377676097
pictur, 6622, 0.0559599064931
ray, 7118, 0.0554150153778
appear, 580, 0.0539030703789
center, 1606, 0.0535119756204
convert, 2115, 0.0532827396346
color, 1907, 0.0532827396346
code, 1871, 0.052690142619
open, 6258, 0.0526178963865
exact, 3253, 0.0526178963865
final, 3482, 0.0520536771574
type, 9177, 0.0517803241563
result, 7332, 0.0514463732273
creat, 2217, 0.0512499674
close, 1830, 0.050248952385
seen, 7767, 0.0492063685818
sever, 7823, 0.0489307422117
wonder, 9821, 0.0481366635123
current, 2299, 0.0480342911822
origin, 6293, 0.0471468643617
write, 9865, 0.0457024820814
big, 1082, 0.0451578779827
possibl, 6765, 0.0434648135452
anoth, 533, 0.0427271393829
problem, 6887, 0.0417081207887
read, 7135, 0.0403557106751
point, 6710, 0.0374203398349
need, 5993, 0.0356443710948
way, 9666, 0.0346790867136
time, 8936, 0.0314992658508
