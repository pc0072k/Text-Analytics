Filename: /home/dev/scikit_learn_data/20news_home/20news-bydate-test/comp.graphics/38980
Truth category: 0 (comp.graphics)
Assigned cluster: 1 (graphic imag file thank program format gif use bit help)

Raw data:
============ START RAW ==========================
From: jk87377@lehtori.cc.tut.fi (Kouhia Juhana)
Subject: Re: XV problems
Organization: Tampere University of Technology
Lines: 100
Distribution: world
NNTP-Posting-Host: cc.tut.fi

In article <1993Apr29.201420.19271@nessie.mcc.ac.uk>
C.C.Lilley@mcc.ac.uk writes:
>
>In article <1rohjc$avt@cc.tut.fi>, jk87377@lehtori.cc.tut.fi (Kouhia
>Juhana) writes:
>
>>I wrote something about making color modifications quickly
>>with 8bit quantized images and only at the saving the image to file
>>process we have to make the modifications to the 24bit image.
>>This makes sense, because the main use of XV is only viewing images.
>>
>>Doing many changes to image, we should keep all modifications
>>in a buffer; and then before making the operations to 24bit image,
>>we should simplify the operation list for unnecessary operations.
>>
>Think about what you are saying here. The 24 bit image is quantised down to 8
>bits so many 'similar' colours are mapped onto a single palette colour. This
>colour gets modified in fairly arbitrary ways. You then want to apply these
>modifications back to the 24 bit file, so you have to find which
>colours mapped to this one palette colour.

I suppose you don't know what about we have discussed.
We discussed about error(s) in XV 2.21 which shows images only as 8bit,
and my suggestion above works perfectly with it.

So far I have seen a colormap editing window in XV -- that is, there
must be a colormap anyway. The problems you present are exist anyway,
and I didn't tried to solve them at all, because I would not make such
problems to my programs in the first place.

Gamma and color corrections are easily done to 24bit image
as I presented. There's no need make tricks from 8bit/quantized image
back to 24 bit image.


>>>How would you suggest doing colour editing on a 24 bit file? How
>>>would you group 'related' colours to edit them together? Only global
>>>changes could be done unless the software were very different and
>>>much more complicated.

Ok, you're writing about situation that user want edit images as 24bit
and user want edit individual colors -- your questions, by the way,
jumps off the discussion a bit.

My solution doesn't work, because there's no colormap withing real 24bit
image -- you see, user see 24bit image; going back to 8bit is silly.


About changing individual colors in 8bit/quantized/rasterized image:
changing individual colors in colormap is useless in most
cases if the image is quantized and rasterized -- small change may
make serious errors to anywhere in the image.
XV allows this feature, but I don't recommend to use it with the
mentioned type images.

Moreover, XV is not a paint program; you can only make those global
changes. In full 24bit XV, changing individual colors sounds like
paint program job.
If person have 8bit screen, there's need for tricks to get the
original 24bit image modified. Because user don't see full 24bit
image, there's need to make approximations and it is not possible to
modify individual colors but individual pixels or pixel groups (if
image is rasterized). To select indiavidual color, there could be 7x7
cursor window which shows true color image in cursor window area --
selecting individual color is possible from that.

Ok, I don't have thought very much 24bit painting programs, never seen
such in good view and are not planned to make such. Not to mention
24bit painting program in 8bit screen...


>Yes again. What *is* (was?) wrong with xv?

It saved 8bit/quantized/rasterized images as 24bit jpegs; jpeg is not
designed for that.
Also, human expect that 24bit will be saved as 24bit image; say,
person would like to crop part of the image and save it, then it is
expected that the image still is the same. So, XV were designed
without thinking about human interface and how human expect the
program work -- design error.

I have heard XV were designed first for 8bit images/files, but
it were not good idea to take full 24bit images without making
major change to the original design.

So, even all screen images are 8bit, the processed images and saved
images could have been 24bit very easily, instead of 8bit.

Before anybody will make a note: yes, I may as well make a lift where
'up' means that the lift goes down and 'down' means that the lift goes
up, and put a note on this design solution to the manuals -- however,
even the manuals tells the correct situation, it doesn't solve the problem.
(Americans: the lift is just an example :)


Well, my text may be a bit hard reading, hopefully you suggeeded to
read it.


Juhana Kouhia

========== END RAW ============================

Preprocessed:
============ START PREPROCESSED =================
 problem         lehtori tut kouhia   wrote someth
make color modif quick 8bit quantiz imag save imag
file process make modif 24bit imag make sens main
use view imag  mani chang imag keep modif buffer
make oper 24bit imag simplifi oper list
unnecessari oper  think say bit imag quantis bit
mani similar colour map onto singl palett colour
colour get modifi fair arbitrari way want appli
modif back bit file find colour map one palett
colour  suppos don't know discuss discuss error
show imag 8bit suggest work perfect  far seen
colormap edit window must colormap anyway problem
present exist anyway didn't tri solv make problem
program first place  gamma color correct easili
done 24bit imag present there need make trick 8bit
quantiz imag back bit imag   suggest colour edit
bit file group relat colour edit togeth global
chang could done unless softwar differ much
complic  you'r write situat user want edit imag
24bit user want edit individu color question way
jump discuss bit  solut doesn't work there
colormap with real 24bit imag see user see 24bit
imag go back 8bit silli   chang individu color
8bit quantiz raster imag chang individu color
colormap useless case imag quantiz raster small
chang make serious error anywher imag allow featur
don't recommend use mention type imag  moreov
paint program make global chang full 24bit chang
individu color sound like paint program job person
8bit screen there need trick get origin 24bit imag
modifi user don't see full 24bit imag there need
make approxim possibl modifi individu color
individu pixel pixel group imag raster select
indiavidu color could 7x7 cursor window show true
color imag cursor window area select individu
color possibl  don't thought much 24bit paint
program never seen good view plan make mention
24bit paint program 8bit screen   yes wrong  save
8bit quantiz raster imag 24bit jpeg jpeg design
also human expect 24bit save 24bit imag say person
like crop part imag save expect imag still design
without think human interfac human expect program
work design error  heard design first 8bit imag
file good idea take full 24bit imag without make
major chang origin design  even screen imag 8bit
process imag save imag could 24bit easili instead
8bit  anybodi make note yes well make lift up mean
lift goe down mean lift goe put note design solut
manual howev even manual tell correct situat
doesn't solv problem american lift exampl   well
text bit hard read hope suggeed read   juhana
kouhia
========== END PREPROCESSED =====================


Feature vector (sorted, non-zero values only):
Term, Index, Value:
imag, 4512, 0.490704796942
24bit, 67, 0.471428731553
8bit, 148, 0.336386299654
color, 1907, 0.189793554287
colour, 1912, 0.188001191407
quantiz, 7022, 0.160225943864
make, 5459, 0.153971002665
individu, 4604, 0.144510895235
chang, 1650, 0.13573396508
colormap, 1909, 0.129981053057
modif, 5813, 0.125025298566
edit, 2996, 0.11250932294
raster, 7104, 0.111932557981
bit, 1122, 0.111489928206
design, 2564, 0.110092754526
lift, 5264, 0.10526817434
paint, 6391, 0.102429519067
save, 7646, 0.0950320843325
program, 6905, 0.0879470395167
user, 9366, 0.0815321557775
modifi, 5814, 0.0678511383077
kouhia, 5068, 0.0659855950639
screen, 7719, 0.0658940144159
file, 3477, 0.0653623589119
error, 3180, 0.0639074380729
cursor, 2302, 0.0632686059084
problem, 6887, 0.0594258669234
oper, 6261, 0.0593120198776
window, 9774, 0.0589342208501
trick, 9094, 0.0571241863174
palett, 6398, 0.0567222356159
expect, 3290, 0.0549054146679
human, 4432, 0.0546965663066
discuss, 2708, 0.0544907521694
global, 3904, 0.0523822211517
manual, 5492, 0.0514369913387
solv, 8119, 0.0503747024772
jpeg, 4905, 0.0483885851624
pixel, 6651, 0.0476076102018
solut, 8118, 0.0466125416665
easili, 2962, 0.044668389241
select, 7774, 0.0441346644206
don, 2811, 0.0428442580638
map, 5498, 0.0423438061516
goe, 3931, 0.0403399417298
work, 9833, 0.0401350372803
situat, 7995, 0.0398659289057
want, 9634, 0.0385906098219
process, 6890, 0.0381770885854
need, 5993, 0.0380896623942
present, 6837, 0.0377981786758
mention, 5632, 0.0377981786758
view, 9510, 0.0368883876134
tut, 9163, 0.0368221786689
suggeed, 8524, 0.0368221786689
correct, 2156, 0.0363726834587
suggest, 8525, 0.0360145584319
seen, 7767, 0.0350546974526
quantis, 7019, 0.0349074881004
yes, 9951, 0.0344031000762
note, 6118, 0.0340755152389
origin, 6293, 0.033587503278
juhana, 4925, 0.0335489935226
moreov, 5859, 0.032992797532
group, 4064, 0.0328682037052
unnecessari, 9295, 0.0320451887728
person, 6562, 0.0314664634405
possibl, 6765, 0.0309644042545
doesn, 2793, 0.0306356497576
crop, 2240, 0.0297196123857
mean, 5595, 0.0291868903528
simplifi, 7969, 0.0289916808156
read, 7135, 0.028749474285
arbitrari, 604, 0.0278049218173
useless, 9364, 0.0270026232302
mani, 5479, 0.0267897139872
buffer, 1371, 0.0267163411574
silli, 7956, 0.0265794559795
complic, 1978, 0.0259488929718
jump, 4929, 0.0257184956693
anywher, 557, 0.0254988184804
way, 9666, 0.0247054380909
interfac, 4709, 0.024531736671
approxim, 593, 0.024445088222
good, 3948, 0.0242775464824
say, 7653, 0.0239780947362
recommend, 7178, 0.0239561476018
gamma, 3762, 0.0231081071574
featur, 3422, 0.0221195118349
togeth, 8969, 0.0218641951713
think, 8871, 0.0216305398469
text, 8822, 0.0211291678703
american, 469, 0.0210032348611
appli, 584, 0.020921107435
use, 9363, 0.0208583873212
main, 5450, 0.0207218285843
perfect, 6538, 0.020644413605
instead, 4682, 0.020275303291
quick, 7036, 0.0201353757799
job, 4873, 0.0201010322978
wrote, 9871, 0.020033085687
fair, 3363, 0.0199994755239
like, 5272, 0.0198862957613
sens, 7788, 0.0196759100862
singl, 7983, 0.0195830111955
similar, 7961, 0.0195524466359
plan, 6660, 0.0192859190272
unless, 9289, 0.0192286794418
suppos, 8577, 0.0192003177471
area, 622, 0.0192003177471
anybodi, 552, 0.0192003177471
sound, 8150, 0.0185415623693
type, 9177, 0.0184441938067
small, 8054, 0.0183962521972
allow, 432, 0.0180959617843
relat, 7247, 0.018051412322
heard, 4224, 0.0179418434163
hard, 4167, 0.0178773019836
wrong, 9869, 0.017332991748
major, 5458, 0.017332991748
list, 5298, 0.0172950621627
exampl, 3258, 0.0171280511539
exist, 3283, 0.0169316361202
hope, 4372, 0.0168794564956
true, 9121, 0.0168449876712
thought, 8887, 0.0164815616287
case, 1540, 0.0164183873357
write, 9865, 0.0162792614896
howev, 4406, 0.0162792614896
real, 7144, 0.0161887371588
place, 6657, 0.016173817058
idea, 4482, 0.0161441175389
far, 3386, 0.0157741168932
didn, 2625, 0.0157741168932
softwar, 8103, 0.0157604491327
tell, 8767, 0.0154310123796
differ, 2633, 0.0145404456529
question, 7032, 0.0142940136729
someth, 8126, 0.013900668578
tri, 9087, 0.0136759731016
know, 5052, 0.0101715547899
